#![allow(unreachable_patterns)]
use anyhow::{bail, Result};

pub fn enum_to_str(ety: &str, value: u32) -> Result<String> {
    let out: String = match ety {
        "SourceLanguage" => match value {
            0 => "Unknown".to_owned(),
            1 => "ESSL".to_owned(),
            2 => "GLSL".to_owned(),
            3 => "OpenCL_C".to_owned(),
            4 => "OpenCL_CPP".to_owned(),
            5 => "HLSL".to_owned(),
            6 => "CPP_for_OpenCL".to_owned(),
            7 => "SYCL".to_owned(),
            8 => "HERO_C".to_owned(),
            9 => "NZSL".to_owned(),
            10 => "WGSL".to_owned(),
            11 => "Slang".to_owned(),
            _ => value.to_string(),
        },
        "ExecutionModel" => match value {
            0 => "Vertex".to_owned(),
            1 => "TessellationControl".to_owned(),
            2 => "TessellationEvaluation".to_owned(),
            3 => "Geometry".to_owned(),
            4 => "Fragment".to_owned(),
            5 => "GLCompute".to_owned(),
            6 => "Kernel".to_owned(),
            5267 => "TaskNV".to_owned(),
            5268 => "MeshNV".to_owned(),
            5313 => "RayGenerationNV".to_owned(),
            5313 => "RayGenerationKHR".to_owned(),
            5314 => "IntersectionNV".to_owned(),
            5314 => "IntersectionKHR".to_owned(),
            5315 => "AnyHitNV".to_owned(),
            5315 => "AnyHitKHR".to_owned(),
            5316 => "ClosestHitNV".to_owned(),
            5316 => "ClosestHitKHR".to_owned(),
            5317 => "MissNV".to_owned(),
            5317 => "MissKHR".to_owned(),
            5318 => "CallableNV".to_owned(),
            5318 => "CallableKHR".to_owned(),
            5364 => "TaskEXT".to_owned(),
            5365 => "MeshEXT".to_owned(),
            _ => value.to_string(),
        },
        "AddressingModel" => match value {
            0 => "Logical".to_owned(),
            1 => "Physical32".to_owned(),
            2 => "Physical64".to_owned(),
            5348 => "PhysicalStorageBuffer64".to_owned(),
            5348 => "PhysicalStorageBuffer64EXT".to_owned(),
            _ => value.to_string(),
        },
        "MemoryModel" => match value {
            0 => "Simple".to_owned(),
            1 => "GLSL450".to_owned(),
            2 => "OpenCL".to_owned(),
            3 => "Vulkan".to_owned(),
            3 => "VulkanKHR".to_owned(),
            _ => value.to_string(),
        },
        "ExecutionMode" => match value {
            0 => "Invocations".to_owned(),
            1 => "SpacingEqual".to_owned(),
            2 => "SpacingFractionalEven".to_owned(),
            3 => "SpacingFractionalOdd".to_owned(),
            4 => "VertexOrderCw".to_owned(),
            5 => "VertexOrderCcw".to_owned(),
            6 => "PixelCenterInteger".to_owned(),
            7 => "OriginUpperLeft".to_owned(),
            8 => "OriginLowerLeft".to_owned(),
            9 => "EarlyFragmentTests".to_owned(),
            10 => "PointMode".to_owned(),
            11 => "Xfb".to_owned(),
            12 => "DepthReplacing".to_owned(),
            14 => "DepthGreater".to_owned(),
            15 => "DepthLess".to_owned(),
            16 => "DepthUnchanged".to_owned(),
            17 => "LocalSize".to_owned(),
            18 => "LocalSizeHint".to_owned(),
            19 => "InputPoints".to_owned(),
            20 => "InputLines".to_owned(),
            21 => "InputLinesAdjacency".to_owned(),
            22 => "Triangles".to_owned(),
            23 => "InputTrianglesAdjacency".to_owned(),
            24 => "Quads".to_owned(),
            25 => "Isolines".to_owned(),
            26 => "OutputVertices".to_owned(),
            27 => "OutputPoints".to_owned(),
            28 => "OutputLineStrip".to_owned(),
            29 => "OutputTriangleStrip".to_owned(),
            30 => "VecTypeHint".to_owned(),
            31 => "ContractionOff".to_owned(),
            33 => "Initializer".to_owned(),
            34 => "Finalizer".to_owned(),
            35 => "SubgroupSize".to_owned(),
            36 => "SubgroupsPerWorkgroup".to_owned(),
            37 => "SubgroupsPerWorkgroupId".to_owned(),
            38 => "LocalSizeId".to_owned(),
            39 => "LocalSizeHintId".to_owned(),
            4169 => "NonCoherentColorAttachmentReadEXT".to_owned(),
            4170 => "NonCoherentDepthAttachmentReadEXT".to_owned(),
            4171 => "NonCoherentStencilAttachmentReadEXT".to_owned(),
            4421 => "SubgroupUniformControlFlowKHR".to_owned(),
            4446 => "PostDepthCoverage".to_owned(),
            4459 => "DenormPreserve".to_owned(),
            4460 => "DenormFlushToZero".to_owned(),
            4461 => "SignedZeroInfNanPreserve".to_owned(),
            4462 => "RoundingModeRTE".to_owned(),
            4463 => "RoundingModeRTZ".to_owned(),
            5017 => "EarlyAndLateFragmentTestsAMD".to_owned(),
            5027 => "StencilRefReplacingEXT".to_owned(),
            5069 => "CoalescingAMDX".to_owned(),
            5071 => "MaxNodeRecursionAMDX".to_owned(),
            5072 => "StaticNumWorkgroupsAMDX".to_owned(),
            5073 => "ShaderIndexAMDX".to_owned(),
            5077 => "MaxNumWorkgroupsAMDX".to_owned(),
            5079 => "StencilRefUnchangedFrontAMD".to_owned(),
            5080 => "StencilRefGreaterFrontAMD".to_owned(),
            5081 => "StencilRefLessFrontAMD".to_owned(),
            5082 => "StencilRefUnchangedBackAMD".to_owned(),
            5083 => "StencilRefGreaterBackAMD".to_owned(),
            5084 => "StencilRefLessBackAMD".to_owned(),
            5269 => "OutputLinesNV".to_owned(),
            5269 => "OutputLinesEXT".to_owned(),
            5270 => "OutputPrimitivesNV".to_owned(),
            5270 => "OutputPrimitivesEXT".to_owned(),
            5289 => "DerivativeGroupQuadsNV".to_owned(),
            5290 => "DerivativeGroupLinearNV".to_owned(),
            5298 => "OutputTrianglesNV".to_owned(),
            5298 => "OutputTrianglesEXT".to_owned(),
            5366 => "PixelInterlockOrderedEXT".to_owned(),
            5367 => "PixelInterlockUnorderedEXT".to_owned(),
            5368 => "SampleInterlockOrderedEXT".to_owned(),
            5369 => "SampleInterlockUnorderedEXT".to_owned(),
            5370 => "ShadingRateInterlockOrderedEXT".to_owned(),
            5371 => "ShadingRateInterlockUnorderedEXT".to_owned(),
            5618 => "SharedLocalMemorySizeINTEL".to_owned(),
            5620 => "RoundingModeRTPINTEL".to_owned(),
            5621 => "RoundingModeRTNINTEL".to_owned(),
            5622 => "FloatingPointModeALTINTEL".to_owned(),
            5623 => "FloatingPointModeIEEEINTEL".to_owned(),
            5893 => "MaxWorkgroupSizeINTEL".to_owned(),
            5894 => "MaxWorkDimINTEL".to_owned(),
            5895 => "NoGlobalOffsetINTEL".to_owned(),
            5896 => "NumSIMDWorkitemsINTEL".to_owned(),
            5903 => "SchedulerTargetFmaxMhzINTEL".to_owned(),
            6154 => "StreamingInterfaceINTEL".to_owned(),
            6160 => "RegisterMapInterfaceINTEL".to_owned(),
            6417 => "NamedBarrierCountINTEL".to_owned(),
            _ => value.to_string(),
        },
        "StorageClass" => match value {
            0 => "UniformConstant".to_owned(),
            1 => "Input".to_owned(),
            2 => "Uniform".to_owned(),
            3 => "Output".to_owned(),
            4 => "Workgroup".to_owned(),
            5 => "CrossWorkgroup".to_owned(),
            6 => "Private".to_owned(),
            7 => "Function".to_owned(),
            8 => "Generic".to_owned(),
            9 => "PushConstant".to_owned(),
            10 => "AtomicCounter".to_owned(),
            11 => "Image".to_owned(),
            12 => "StorageBuffer".to_owned(),
            4172 => "TileImageEXT".to_owned(),
            5068 => "NodePayloadAMDX".to_owned(),
            5076 => "NodeOutputPayloadAMDX".to_owned(),
            5328 => "CallableDataNV".to_owned(),
            5328 => "CallableDataKHR".to_owned(),
            5329 => "IncomingCallableDataNV".to_owned(),
            5329 => "IncomingCallableDataKHR".to_owned(),
            5338 => "RayPayloadNV".to_owned(),
            5338 => "RayPayloadKHR".to_owned(),
            5339 => "HitAttributeNV".to_owned(),
            5339 => "HitAttributeKHR".to_owned(),
            5342 => "IncomingRayPayloadNV".to_owned(),
            5342 => "IncomingRayPayloadKHR".to_owned(),
            5343 => "ShaderRecordBufferNV".to_owned(),
            5343 => "ShaderRecordBufferKHR".to_owned(),
            5349 => "PhysicalStorageBuffer".to_owned(),
            5349 => "PhysicalStorageBufferEXT".to_owned(),
            5385 => "HitObjectAttributeNV".to_owned(),
            5402 => "TaskPayloadWorkgroupEXT".to_owned(),
            5605 => "CodeSectionINTEL".to_owned(),
            5936 => "DeviceOnlyINTEL".to_owned(),
            5937 => "HostOnlyINTEL".to_owned(),
            _ => value.to_string(),
        },
        "Dim" => match value {
            0 => "1D".to_owned(),
            1 => "2D".to_owned(),
            2 => "3D".to_owned(),
            3 => "Cube".to_owned(),
            4 => "Rect".to_owned(),
            5 => "Buffer".to_owned(),
            6 => "SubpassData".to_owned(),
            4173 => "TileImageDataEXT".to_owned(),
            _ => value.to_string(),
        },
        "SamplerAddressingMode" => match value {
            0 => "None".to_owned(),
            1 => "ClampToEdge".to_owned(),
            2 => "Clamp".to_owned(),
            3 => "Repeat".to_owned(),
            4 => "RepeatMirrored".to_owned(),
            _ => value.to_string(),
        },
        "SamplerFilterMode" => match value {
            0 => "Nearest".to_owned(),
            1 => "Linear".to_owned(),
            _ => value.to_string(),
        },
        "ImageFormat" => match value {
            0 => "Unknown".to_owned(),
            1 => "Rgba32f".to_owned(),
            2 => "Rgba16f".to_owned(),
            3 => "R32f".to_owned(),
            4 => "Rgba8".to_owned(),
            5 => "Rgba8Snorm".to_owned(),
            6 => "Rg32f".to_owned(),
            7 => "Rg16f".to_owned(),
            8 => "R11fG11fB10f".to_owned(),
            9 => "R16f".to_owned(),
            10 => "Rgba16".to_owned(),
            11 => "Rgb10A2".to_owned(),
            12 => "Rg16".to_owned(),
            13 => "Rg8".to_owned(),
            14 => "R16".to_owned(),
            15 => "R8".to_owned(),
            16 => "Rgba16Snorm".to_owned(),
            17 => "Rg16Snorm".to_owned(),
            18 => "Rg8Snorm".to_owned(),
            19 => "R16Snorm".to_owned(),
            20 => "R8Snorm".to_owned(),
            21 => "Rgba32i".to_owned(),
            22 => "Rgba16i".to_owned(),
            23 => "Rgba8i".to_owned(),
            24 => "R32i".to_owned(),
            25 => "Rg32i".to_owned(),
            26 => "Rg16i".to_owned(),
            27 => "Rg8i".to_owned(),
            28 => "R16i".to_owned(),
            29 => "R8i".to_owned(),
            30 => "Rgba32ui".to_owned(),
            31 => "Rgba16ui".to_owned(),
            32 => "Rgba8ui".to_owned(),
            33 => "R32ui".to_owned(),
            34 => "Rgb10a2ui".to_owned(),
            35 => "Rg32ui".to_owned(),
            36 => "Rg16ui".to_owned(),
            37 => "Rg8ui".to_owned(),
            38 => "R16ui".to_owned(),
            39 => "R8ui".to_owned(),
            40 => "R64ui".to_owned(),
            41 => "R64i".to_owned(),
            _ => value.to_string(),
        },
        "ImageChannelOrder" => match value {
            0 => "R".to_owned(),
            1 => "A".to_owned(),
            2 => "RG".to_owned(),
            3 => "RA".to_owned(),
            4 => "RGB".to_owned(),
            5 => "RGBA".to_owned(),
            6 => "BGRA".to_owned(),
            7 => "ARGB".to_owned(),
            8 => "Intensity".to_owned(),
            9 => "Luminance".to_owned(),
            10 => "Rx".to_owned(),
            11 => "RGx".to_owned(),
            12 => "RGBx".to_owned(),
            13 => "Depth".to_owned(),
            14 => "DepthStencil".to_owned(),
            15 => "sRGB".to_owned(),
            16 => "sRGBx".to_owned(),
            17 => "sRGBA".to_owned(),
            18 => "sBGRA".to_owned(),
            19 => "ABGR".to_owned(),
            _ => value.to_string(),
        },
        "ImageChannelDataType" => match value {
            0 => "SnormInt8".to_owned(),
            1 => "SnormInt16".to_owned(),
            2 => "UnormInt8".to_owned(),
            3 => "UnormInt16".to_owned(),
            4 => "UnormShort565".to_owned(),
            5 => "UnormShort555".to_owned(),
            6 => "UnormInt101010".to_owned(),
            7 => "SignedInt8".to_owned(),
            8 => "SignedInt16".to_owned(),
            9 => "SignedInt32".to_owned(),
            10 => "UnsignedInt8".to_owned(),
            11 => "UnsignedInt16".to_owned(),
            12 => "UnsignedInt32".to_owned(),
            13 => "HalfFloat".to_owned(),
            14 => "Float".to_owned(),
            15 => "UnormInt24".to_owned(),
            16 => "UnormInt101010_2".to_owned(),
            19 => "UnsignedIntRaw10EXT".to_owned(),
            20 => "UnsignedIntRaw12EXT".to_owned(),
            _ => value.to_string(),
        },
        "FPRoundingMode" => match value {
            0 => "RTE".to_owned(),
            1 => "RTZ".to_owned(),
            2 => "RTP".to_owned(),
            3 => "RTN".to_owned(),
            _ => value.to_string(),
        },
        "FPDenormMode" => match value {
            0 => "Preserve".to_owned(),
            1 => "FlushToZero".to_owned(),
            _ => value.to_string(),
        },
        "QuantizationModes" => match value {
            0 => "TRN".to_owned(),
            1 => "TRN_ZERO".to_owned(),
            2 => "RND".to_owned(),
            3 => "RND_ZERO".to_owned(),
            4 => "RND_INF".to_owned(),
            5 => "RND_MIN_INF".to_owned(),
            6 => "RND_CONV".to_owned(),
            7 => "RND_CONV_ODD".to_owned(),
            _ => value.to_string(),
        },
        "FPOperationMode" => match value {
            0 => "IEEE".to_owned(),
            1 => "ALT".to_owned(),
            _ => value.to_string(),
        },
        "OverflowModes" => match value {
            0 => "WRAP".to_owned(),
            1 => "SAT".to_owned(),
            2 => "SAT_ZERO".to_owned(),
            3 => "SAT_SYM".to_owned(),
            _ => value.to_string(),
        },
        "LinkageType" => match value {
            0 => "Export".to_owned(),
            1 => "Import".to_owned(),
            2 => "LinkOnceODR".to_owned(),
            _ => value.to_string(),
        },
        "AccessQualifier" => match value {
            0 => "ReadOnly".to_owned(),
            1 => "WriteOnly".to_owned(),
            2 => "ReadWrite".to_owned(),
            _ => value.to_string(),
        },
        "HostAccessQualifier" => match value {
            0 => "NoneINTEL".to_owned(),
            1 => "ReadINTEL".to_owned(),
            2 => "WriteINTEL".to_owned(),
            3 => "ReadWriteINTEL".to_owned(),
            _ => value.to_string(),
        },
        "FunctionParameterAttribute" => match value {
            0 => "Zext".to_owned(),
            1 => "Sext".to_owned(),
            2 => "ByVal".to_owned(),
            3 => "Sret".to_owned(),
            4 => "NoAlias".to_owned(),
            5 => "NoCapture".to_owned(),
            6 => "NoWrite".to_owned(),
            7 => "NoReadWrite".to_owned(),
            5940 => "RuntimeAlignedINTEL".to_owned(),
            _ => value.to_string(),
        },
        "Decoration" => match value {
            0 => "RelaxedPrecision".to_owned(),
            1 => "SpecId".to_owned(),
            2 => "Block".to_owned(),
            3 => "BufferBlock".to_owned(),
            4 => "RowMajor".to_owned(),
            5 => "ColMajor".to_owned(),
            6 => "ArrayStride".to_owned(),
            7 => "MatrixStride".to_owned(),
            8 => "GLSLShared".to_owned(),
            9 => "GLSLPacked".to_owned(),
            10 => "CPacked".to_owned(),
            11 => "BuiltIn".to_owned(),
            13 => "NoPerspective".to_owned(),
            14 => "Flat".to_owned(),
            15 => "Patch".to_owned(),
            16 => "Centroid".to_owned(),
            17 => "Sample".to_owned(),
            18 => "Invariant".to_owned(),
            19 => "Restrict".to_owned(),
            20 => "Aliased".to_owned(),
            21 => "Volatile".to_owned(),
            22 => "Constant".to_owned(),
            23 => "Coherent".to_owned(),
            24 => "NonWritable".to_owned(),
            25 => "NonReadable".to_owned(),
            26 => "Uniform".to_owned(),
            27 => "UniformId".to_owned(),
            28 => "SaturatedConversion".to_owned(),
            29 => "Stream".to_owned(),
            30 => "Location".to_owned(),
            31 => "Component".to_owned(),
            32 => "Index".to_owned(),
            33 => "Binding".to_owned(),
            34 => "DescriptorSet".to_owned(),
            35 => "Offset".to_owned(),
            36 => "XfbBuffer".to_owned(),
            37 => "XfbStride".to_owned(),
            38 => "FuncParamAttr".to_owned(),
            39 => "FPRoundingMode".to_owned(),
            40 => "FPFastMathMode".to_owned(),
            41 => "LinkageAttributes".to_owned(),
            42 => "NoContraction".to_owned(),
            43 => "InputAttachmentIndex".to_owned(),
            44 => "Alignment".to_owned(),
            45 => "MaxByteOffset".to_owned(),
            46 => "AlignmentId".to_owned(),
            47 => "MaxByteOffsetId".to_owned(),
            4469 => "NoSignedWrap".to_owned(),
            4470 => "NoUnsignedWrap".to_owned(),
            4487 => "WeightTextureQCOM".to_owned(),
            4488 => "BlockMatchTextureQCOM".to_owned(),
            4999 => "ExplicitInterpAMD".to_owned(),
            5019 => "NodeSharesPayloadLimitsWithAMDX".to_owned(),
            5020 => "NodeMaxPayloadsAMDX".to_owned(),
            5078 => "TrackFinishWritingAMDX".to_owned(),
            5091 => "PayloadNodeNameAMDX".to_owned(),
            5248 => "OverrideCoverageNV".to_owned(),
            5250 => "PassthroughNV".to_owned(),
            5252 => "ViewportRelativeNV".to_owned(),
            5256 => "SecondaryViewportRelativeNV".to_owned(),
            5271 => "PerPrimitiveNV".to_owned(),
            5271 => "PerPrimitiveEXT".to_owned(),
            5272 => "PerViewNV".to_owned(),
            5273 => "PerTaskNV".to_owned(),
            5285 => "PerVertexKHR".to_owned(),
            5285 => "PerVertexNV".to_owned(),
            5300 => "NonUniform".to_owned(),
            5300 => "NonUniformEXT".to_owned(),
            5355 => "RestrictPointer".to_owned(),
            5355 => "RestrictPointerEXT".to_owned(),
            5356 => "AliasedPointer".to_owned(),
            5356 => "AliasedPointerEXT".to_owned(),
            5386 => "HitObjectShaderRecordBufferNV".to_owned(),
            5398 => "BindlessSamplerNV".to_owned(),
            5399 => "BindlessImageNV".to_owned(),
            5400 => "BoundSamplerNV".to_owned(),
            5401 => "BoundImageNV".to_owned(),
            5599 => "SIMTCallINTEL".to_owned(),
            5602 => "ReferencedIndirectlyINTEL".to_owned(),
            5607 => "ClobberINTEL".to_owned(),
            5608 => "SideEffectsINTEL".to_owned(),
            5624 => "VectorComputeVariableINTEL".to_owned(),
            5625 => "FuncParamIOKindINTEL".to_owned(),
            5626 => "VectorComputeFunctionINTEL".to_owned(),
            5627 => "StackCallINTEL".to_owned(),
            5628 => "GlobalVariableOffsetINTEL".to_owned(),
            5634 => "CounterBuffer".to_owned(),
            5634 => "HlslCounterBufferGOOGLE".to_owned(),
            5635 => "UserSemantic".to_owned(),
            5635 => "HlslSemanticGOOGLE".to_owned(),
            5636 => "UserTypeGOOGLE".to_owned(),
            5822 => "FunctionRoundingModeINTEL".to_owned(),
            5823 => "FunctionDenormModeINTEL".to_owned(),
            5825 => "RegisterINTEL".to_owned(),
            5826 => "MemoryINTEL".to_owned(),
            5827 => "NumbanksINTEL".to_owned(),
            5828 => "BankwidthINTEL".to_owned(),
            5829 => "MaxPrivateCopiesINTEL".to_owned(),
            5830 => "SinglepumpINTEL".to_owned(),
            5831 => "DoublepumpINTEL".to_owned(),
            5832 => "MaxReplicatesINTEL".to_owned(),
            5833 => "SimpleDualPortINTEL".to_owned(),
            5834 => "MergeINTEL".to_owned(),
            5835 => "BankBitsINTEL".to_owned(),
            5836 => "ForcePow2DepthINTEL".to_owned(),
            5883 => "StridesizeINTEL".to_owned(),
            5884 => "WordsizeINTEL".to_owned(),
            5885 => "TrueDualPortINTEL".to_owned(),
            5899 => "BurstCoalesceINTEL".to_owned(),
            5900 => "CacheSizeINTEL".to_owned(),
            5901 => "DontStaticallyCoalesceINTEL".to_owned(),
            5902 => "PrefetchINTEL".to_owned(),
            5905 => "StallEnableINTEL".to_owned(),
            5907 => "FuseLoopsInFunctionINTEL".to_owned(),
            5909 => "MathOpDSPModeINTEL".to_owned(),
            5914 => "AliasScopeINTEL".to_owned(),
            5915 => "NoAliasINTEL".to_owned(),
            5917 => "InitiationIntervalINTEL".to_owned(),
            5918 => "MaxConcurrencyINTEL".to_owned(),
            5919 => "PipelineEnableINTEL".to_owned(),
            5921 => "BufferLocationINTEL".to_owned(),
            5944 => "IOPipeStorageINTEL".to_owned(),
            6080 => "FunctionFloatingPointModeINTEL".to_owned(),
            6085 => "SingleElementVectorINTEL".to_owned(),
            6087 => "VectorComputeCallableFunctionINTEL".to_owned(),
            6140 => "MediaBlockIOINTEL".to_owned(),
            6151 => "StallFreeINTEL".to_owned(),
            6170 => "FPMaxErrorDecorationINTEL".to_owned(),
            6172 => "LatencyControlLabelINTEL".to_owned(),
            6173 => "LatencyControlConstraintINTEL".to_owned(),
            6175 => "ConduitKernelArgumentINTEL".to_owned(),
            6176 => "RegisterMapKernelArgumentINTEL".to_owned(),
            6177 => "MMHostInterfaceAddressWidthINTEL".to_owned(),
            6178 => "MMHostInterfaceDataWidthINTEL".to_owned(),
            6179 => "MMHostInterfaceLatencyINTEL".to_owned(),
            6180 => "MMHostInterfaceReadWriteModeINTEL".to_owned(),
            6181 => "MMHostInterfaceMaxBurstINTEL".to_owned(),
            6182 => "MMHostInterfaceWaitRequestINTEL".to_owned(),
            6183 => "StableKernelArgumentINTEL".to_owned(),
            6188 => "HostAccessINTEL".to_owned(),
            6190 => "InitModeINTEL".to_owned(),
            6191 => "ImplementInRegisterMapINTEL".to_owned(),
            6442 => "CacheControlLoadINTEL".to_owned(),
            6443 => "CacheControlStoreINTEL".to_owned(),
            _ => value.to_string(),
        },
        "BuiltIn" => match value {
            0 => "Position".to_owned(),
            1 => "PointSize".to_owned(),
            3 => "ClipDistance".to_owned(),
            4 => "CullDistance".to_owned(),
            5 => "VertexId".to_owned(),
            6 => "InstanceId".to_owned(),
            7 => "PrimitiveId".to_owned(),
            8 => "InvocationId".to_owned(),
            9 => "Layer".to_owned(),
            10 => "ViewportIndex".to_owned(),
            11 => "TessLevelOuter".to_owned(),
            12 => "TessLevelInner".to_owned(),
            13 => "TessCoord".to_owned(),
            14 => "PatchVertices".to_owned(),
            15 => "FragCoord".to_owned(),
            16 => "PointCoord".to_owned(),
            17 => "FrontFacing".to_owned(),
            18 => "SampleId".to_owned(),
            19 => "SamplePosition".to_owned(),
            20 => "SampleMask".to_owned(),
            22 => "FragDepth".to_owned(),
            23 => "HelperInvocation".to_owned(),
            24 => "NumWorkgroups".to_owned(),
            25 => "WorkgroupSize".to_owned(),
            26 => "WorkgroupId".to_owned(),
            27 => "LocalInvocationId".to_owned(),
            28 => "GlobalInvocationId".to_owned(),
            29 => "LocalInvocationIndex".to_owned(),
            30 => "WorkDim".to_owned(),
            31 => "GlobalSize".to_owned(),
            32 => "EnqueuedWorkgroupSize".to_owned(),
            33 => "GlobalOffset".to_owned(),
            34 => "GlobalLinearId".to_owned(),
            36 => "SubgroupSize".to_owned(),
            37 => "SubgroupMaxSize".to_owned(),
            38 => "NumSubgroups".to_owned(),
            39 => "NumEnqueuedSubgroups".to_owned(),
            40 => "SubgroupId".to_owned(),
            41 => "SubgroupLocalInvocationId".to_owned(),
            42 => "VertexIndex".to_owned(),
            43 => "InstanceIndex".to_owned(),
            4160 => "CoreIDARM".to_owned(),
            4161 => "CoreCountARM".to_owned(),
            4162 => "CoreMaxIDARM".to_owned(),
            4163 => "WarpIDARM".to_owned(),
            4164 => "WarpMaxIDARM".to_owned(),
            4416 => "SubgroupEqMask".to_owned(),
            4416 => "SubgroupEqMaskKHR".to_owned(),
            4417 => "SubgroupGeMask".to_owned(),
            4417 => "SubgroupGeMaskKHR".to_owned(),
            4418 => "SubgroupGtMask".to_owned(),
            4418 => "SubgroupGtMaskKHR".to_owned(),
            4419 => "SubgroupLeMask".to_owned(),
            4419 => "SubgroupLeMaskKHR".to_owned(),
            4420 => "SubgroupLtMask".to_owned(),
            4420 => "SubgroupLtMaskKHR".to_owned(),
            4424 => "BaseVertex".to_owned(),
            4425 => "BaseInstance".to_owned(),
            4426 => "DrawIndex".to_owned(),
            4432 => "PrimitiveShadingRateKHR".to_owned(),
            4438 => "DeviceIndex".to_owned(),
            4440 => "ViewIndex".to_owned(),
            4444 => "ShadingRateKHR".to_owned(),
            4992 => "BaryCoordNoPerspAMD".to_owned(),
            4993 => "BaryCoordNoPerspCentroidAMD".to_owned(),
            4994 => "BaryCoordNoPerspSampleAMD".to_owned(),
            4995 => "BaryCoordSmoothAMD".to_owned(),
            4996 => "BaryCoordSmoothCentroidAMD".to_owned(),
            4997 => "BaryCoordSmoothSampleAMD".to_owned(),
            4998 => "BaryCoordPullModelAMD".to_owned(),
            5014 => "FragStencilRefEXT".to_owned(),
            5021 => "CoalescedInputCountAMDX".to_owned(),
            5073 => "ShaderIndexAMDX".to_owned(),
            5253 => "ViewportMaskNV".to_owned(),
            5257 => "SecondaryPositionNV".to_owned(),
            5258 => "SecondaryViewportMaskNV".to_owned(),
            5261 => "PositionPerViewNV".to_owned(),
            5262 => "ViewportMaskPerViewNV".to_owned(),
            5264 => "FullyCoveredEXT".to_owned(),
            5274 => "TaskCountNV".to_owned(),
            5275 => "PrimitiveCountNV".to_owned(),
            5276 => "PrimitiveIndicesNV".to_owned(),
            5277 => "ClipDistancePerViewNV".to_owned(),
            5278 => "CullDistancePerViewNV".to_owned(),
            5279 => "LayerPerViewNV".to_owned(),
            5280 => "MeshViewCountNV".to_owned(),
            5281 => "MeshViewIndicesNV".to_owned(),
            5286 => "BaryCoordKHR".to_owned(),
            5286 => "BaryCoordNV".to_owned(),
            5287 => "BaryCoordNoPerspKHR".to_owned(),
            5287 => "BaryCoordNoPerspNV".to_owned(),
            5292 => "FragSizeEXT".to_owned(),
            5292 => "FragmentSizeNV".to_owned(),
            5293 => "FragInvocationCountEXT".to_owned(),
            5293 => "InvocationsPerPixelNV".to_owned(),
            5294 => "PrimitivePointIndicesEXT".to_owned(),
            5295 => "PrimitiveLineIndicesEXT".to_owned(),
            5296 => "PrimitiveTriangleIndicesEXT".to_owned(),
            5299 => "CullPrimitiveEXT".to_owned(),
            5319 => "LaunchIdNV".to_owned(),
            5319 => "LaunchIdKHR".to_owned(),
            5320 => "LaunchSizeNV".to_owned(),
            5320 => "LaunchSizeKHR".to_owned(),
            5321 => "WorldRayOriginNV".to_owned(),
            5321 => "WorldRayOriginKHR".to_owned(),
            5322 => "WorldRayDirectionNV".to_owned(),
            5322 => "WorldRayDirectionKHR".to_owned(),
            5323 => "ObjectRayOriginNV".to_owned(),
            5323 => "ObjectRayOriginKHR".to_owned(),
            5324 => "ObjectRayDirectionNV".to_owned(),
            5324 => "ObjectRayDirectionKHR".to_owned(),
            5325 => "RayTminNV".to_owned(),
            5325 => "RayTminKHR".to_owned(),
            5326 => "RayTmaxNV".to_owned(),
            5326 => "RayTmaxKHR".to_owned(),
            5327 => "InstanceCustomIndexNV".to_owned(),
            5327 => "InstanceCustomIndexKHR".to_owned(),
            5330 => "ObjectToWorldNV".to_owned(),
            5330 => "ObjectToWorldKHR".to_owned(),
            5331 => "WorldToObjectNV".to_owned(),
            5331 => "WorldToObjectKHR".to_owned(),
            5332 => "HitTNV".to_owned(),
            5333 => "HitKindNV".to_owned(),
            5333 => "HitKindKHR".to_owned(),
            5334 => "CurrentRayTimeNV".to_owned(),
            5335 => "HitTriangleVertexPositionsKHR".to_owned(),
            5337 => "HitMicroTriangleVertexPositionsNV".to_owned(),
            5344 => "HitMicroTriangleVertexBarycentricsNV".to_owned(),
            5351 => "IncomingRayFlagsNV".to_owned(),
            5351 => "IncomingRayFlagsKHR".to_owned(),
            5352 => "RayGeometryIndexKHR".to_owned(),
            5374 => "WarpsPerSMNV".to_owned(),
            5375 => "SMCountNV".to_owned(),
            5376 => "WarpIDNV".to_owned(),
            5377 => "SMIDNV".to_owned(),
            5405 => "HitKindFrontFacingMicroTriangleNV".to_owned(),
            5406 => "HitKindBackFacingMicroTriangleNV".to_owned(),
            6021 => "CullMaskKHR".to_owned(),
            _ => value.to_string(),
        },
        "Scope" => match value {
            0 => "CrossDevice".to_owned(),
            1 => "Device".to_owned(),
            2 => "Workgroup".to_owned(),
            3 => "Subgroup".to_owned(),
            4 => "Invocation".to_owned(),
            5 => "QueueFamily".to_owned(),
            5 => "QueueFamilyKHR".to_owned(),
            6 => "ShaderCallKHR".to_owned(),
            _ => value.to_string(),
        },
        "GroupOperation" => match value {
            0 => "Reduce".to_owned(),
            1 => "InclusiveScan".to_owned(),
            2 => "ExclusiveScan".to_owned(),
            3 => "ClusteredReduce".to_owned(),
            6 => "PartitionedReduceNV".to_owned(),
            7 => "PartitionedInclusiveScanNV".to_owned(),
            8 => "PartitionedExclusiveScanNV".to_owned(),
            _ => value.to_string(),
        },
        "KernelEnqueueFlags" => match value {
            0 => "NoWait".to_owned(),
            1 => "WaitKernel".to_owned(),
            2 => "WaitWorkGroup".to_owned(),
            _ => value.to_string(),
        },
        "Capability" => match value {
            0 => "Matrix".to_owned(),
            1 => "Shader".to_owned(),
            2 => "Geometry".to_owned(),
            3 => "Tessellation".to_owned(),
            4 => "Addresses".to_owned(),
            5 => "Linkage".to_owned(),
            6 => "Kernel".to_owned(),
            7 => "Vector16".to_owned(),
            8 => "Float16Buffer".to_owned(),
            9 => "Float16".to_owned(),
            10 => "Float64".to_owned(),
            11 => "Int64".to_owned(),
            12 => "Int64Atomics".to_owned(),
            13 => "ImageBasic".to_owned(),
            14 => "ImageReadWrite".to_owned(),
            15 => "ImageMipmap".to_owned(),
            17 => "Pipes".to_owned(),
            18 => "Groups".to_owned(),
            19 => "DeviceEnqueue".to_owned(),
            20 => "LiteralSampler".to_owned(),
            21 => "AtomicStorage".to_owned(),
            22 => "Int16".to_owned(),
            23 => "TessellationPointSize".to_owned(),
            24 => "GeometryPointSize".to_owned(),
            25 => "ImageGatherExtended".to_owned(),
            27 => "StorageImageMultisample".to_owned(),
            28 => "UniformBufferArrayDynamicIndexing".to_owned(),
            29 => "SampledImageArrayDynamicIndexing".to_owned(),
            30 => "StorageBufferArrayDynamicIndexing".to_owned(),
            31 => "StorageImageArrayDynamicIndexing".to_owned(),
            32 => "ClipDistance".to_owned(),
            33 => "CullDistance".to_owned(),
            34 => "ImageCubeArray".to_owned(),
            35 => "SampleRateShading".to_owned(),
            36 => "ImageRect".to_owned(),
            37 => "SampledRect".to_owned(),
            38 => "GenericPointer".to_owned(),
            39 => "Int8".to_owned(),
            40 => "InputAttachment".to_owned(),
            41 => "SparseResidency".to_owned(),
            42 => "MinLod".to_owned(),
            43 => "Sampled1D".to_owned(),
            44 => "Image1D".to_owned(),
            45 => "SampledCubeArray".to_owned(),
            46 => "SampledBuffer".to_owned(),
            47 => "ImageBuffer".to_owned(),
            48 => "ImageMSArray".to_owned(),
            49 => "StorageImageExtendedFormats".to_owned(),
            50 => "ImageQuery".to_owned(),
            51 => "DerivativeControl".to_owned(),
            52 => "InterpolationFunction".to_owned(),
            53 => "TransformFeedback".to_owned(),
            54 => "GeometryStreams".to_owned(),
            55 => "StorageImageReadWithoutFormat".to_owned(),
            56 => "StorageImageWriteWithoutFormat".to_owned(),
            57 => "MultiViewport".to_owned(),
            58 => "SubgroupDispatch".to_owned(),
            59 => "NamedBarrier".to_owned(),
            60 => "PipeStorage".to_owned(),
            61 => "GroupNonUniform".to_owned(),
            62 => "GroupNonUniformVote".to_owned(),
            63 => "GroupNonUniformArithmetic".to_owned(),
            64 => "GroupNonUniformBallot".to_owned(),
            65 => "GroupNonUniformShuffle".to_owned(),
            66 => "GroupNonUniformShuffleRelative".to_owned(),
            67 => "GroupNonUniformClustered".to_owned(),
            68 => "GroupNonUniformQuad".to_owned(),
            69 => "ShaderLayer".to_owned(),
            70 => "ShaderViewportIndex".to_owned(),
            71 => "UniformDecoration".to_owned(),
            4165 => "CoreBuiltinsARM".to_owned(),
            4166 => "TileImageColorReadAccessEXT".to_owned(),
            4167 => "TileImageDepthReadAccessEXT".to_owned(),
            4168 => "TileImageStencilReadAccessEXT".to_owned(),
            4422 => "FragmentShadingRateKHR".to_owned(),
            4423 => "SubgroupBallotKHR".to_owned(),
            4427 => "DrawParameters".to_owned(),
            4428 => "WorkgroupMemoryExplicitLayoutKHR".to_owned(),
            4429 => "WorkgroupMemoryExplicitLayout8BitAccessKHR".to_owned(),
            4430 => "WorkgroupMemoryExplicitLayout16BitAccessKHR".to_owned(),
            4431 => "SubgroupVoteKHR".to_owned(),
            4433 => "StorageBuffer16BitAccess".to_owned(),
            4433 => "StorageUniformBufferBlock16".to_owned(),
            4434 => "UniformAndStorageBuffer16BitAccess".to_owned(),
            4434 => "StorageUniform16".to_owned(),
            4435 => "StoragePushConstant16".to_owned(),
            4436 => "StorageInputOutput16".to_owned(),
            4437 => "DeviceGroup".to_owned(),
            4439 => "MultiView".to_owned(),
            4441 => "VariablePointersStorageBuffer".to_owned(),
            4442 => "VariablePointers".to_owned(),
            4445 => "AtomicStorageOps".to_owned(),
            4447 => "SampleMaskPostDepthCoverage".to_owned(),
            4448 => "StorageBuffer8BitAccess".to_owned(),
            4449 => "UniformAndStorageBuffer8BitAccess".to_owned(),
            4450 => "StoragePushConstant8".to_owned(),
            4464 => "DenormPreserve".to_owned(),
            4465 => "DenormFlushToZero".to_owned(),
            4466 => "SignedZeroInfNanPreserve".to_owned(),
            4467 => "RoundingModeRTE".to_owned(),
            4468 => "RoundingModeRTZ".to_owned(),
            4471 => "RayQueryProvisionalKHR".to_owned(),
            4472 => "RayQueryKHR".to_owned(),
            4478 => "RayTraversalPrimitiveCullingKHR".to_owned(),
            4479 => "RayTracingKHR".to_owned(),
            4484 => "TextureSampleWeightedQCOM".to_owned(),
            4485 => "TextureBoxFilterQCOM".to_owned(),
            4486 => "TextureBlockMatchQCOM".to_owned(),
            5008 => "Float16ImageAMD".to_owned(),
            5009 => "ImageGatherBiasLodAMD".to_owned(),
            5010 => "FragmentMaskAMD".to_owned(),
            5013 => "StencilExportEXT".to_owned(),
            5015 => "ImageReadWriteLodAMD".to_owned(),
            5016 => "Int64ImageEXT".to_owned(),
            5055 => "ShaderClockKHR".to_owned(),
            5067 => "ShaderEnqueueAMDX".to_owned(),
            5249 => "SampleMaskOverrideCoverageNV".to_owned(),
            5251 => "GeometryShaderPassthroughNV".to_owned(),
            5254 => "ShaderViewportIndexLayerEXT".to_owned(),
            5254 => "ShaderViewportIndexLayerNV".to_owned(),
            5255 => "ShaderViewportMaskNV".to_owned(),
            5259 => "ShaderStereoViewNV".to_owned(),
            5260 => "PerViewAttributesNV".to_owned(),
            5265 => "FragmentFullyCoveredEXT".to_owned(),
            5266 => "MeshShadingNV".to_owned(),
            5282 => "ImageFootprintNV".to_owned(),
            5283 => "MeshShadingEXT".to_owned(),
            5284 => "FragmentBarycentricKHR".to_owned(),
            5284 => "FragmentBarycentricNV".to_owned(),
            5288 => "ComputeDerivativeGroupQuadsNV".to_owned(),
            5291 => "FragmentDensityEXT".to_owned(),
            5291 => "ShadingRateNV".to_owned(),
            5297 => "GroupNonUniformPartitionedNV".to_owned(),
            5301 => "ShaderNonUniform".to_owned(),
            5301 => "ShaderNonUniformEXT".to_owned(),
            5302 => "RuntimeDescriptorArray".to_owned(),
            5302 => "RuntimeDescriptorArrayEXT".to_owned(),
            5303 => "InputAttachmentArrayDynamicIndexing".to_owned(),
            5303 => "InputAttachmentArrayDynamicIndexingEXT".to_owned(),
            5304 => "UniformTexelBufferArrayDynamicIndexing".to_owned(),
            5304 => "UniformTexelBufferArrayDynamicIndexingEXT".to_owned(),
            5305 => "StorageTexelBufferArrayDynamicIndexing".to_owned(),
            5305 => "StorageTexelBufferArrayDynamicIndexingEXT".to_owned(),
            5306 => "UniformBufferArrayNonUniformIndexing".to_owned(),
            5306 => "UniformBufferArrayNonUniformIndexingEXT".to_owned(),
            5307 => "SampledImageArrayNonUniformIndexing".to_owned(),
            5307 => "SampledImageArrayNonUniformIndexingEXT".to_owned(),
            5308 => "StorageBufferArrayNonUniformIndexing".to_owned(),
            5308 => "StorageBufferArrayNonUniformIndexingEXT".to_owned(),
            5309 => "StorageImageArrayNonUniformIndexing".to_owned(),
            5309 => "StorageImageArrayNonUniformIndexingEXT".to_owned(),
            5310 => "InputAttachmentArrayNonUniformIndexing".to_owned(),
            5310 => "InputAttachmentArrayNonUniformIndexingEXT".to_owned(),
            5311 => "UniformTexelBufferArrayNonUniformIndexing".to_owned(),
            5311 => "UniformTexelBufferArrayNonUniformIndexingEXT".to_owned(),
            5312 => "StorageTexelBufferArrayNonUniformIndexing".to_owned(),
            5312 => "StorageTexelBufferArrayNonUniformIndexingEXT".to_owned(),
            5336 => "RayTracingPositionFetchKHR".to_owned(),
            5340 => "RayTracingNV".to_owned(),
            5341 => "RayTracingMotionBlurNV".to_owned(),
            5345 => "VulkanMemoryModel".to_owned(),
            5345 => "VulkanMemoryModelKHR".to_owned(),
            5346 => "VulkanMemoryModelDeviceScope".to_owned(),
            5346 => "VulkanMemoryModelDeviceScopeKHR".to_owned(),
            5347 => "PhysicalStorageBufferAddresses".to_owned(),
            5347 => "PhysicalStorageBufferAddressesEXT".to_owned(),
            5350 => "ComputeDerivativeGroupLinearNV".to_owned(),
            5353 => "RayTracingProvisionalKHR".to_owned(),
            5357 => "CooperativeMatrixNV".to_owned(),
            5363 => "FragmentShaderSampleInterlockEXT".to_owned(),
            5372 => "FragmentShaderShadingRateInterlockEXT".to_owned(),
            5373 => "ShaderSMBuiltinsNV".to_owned(),
            5378 => "FragmentShaderPixelInterlockEXT".to_owned(),
            5379 => "DemoteToHelperInvocation".to_owned(),
            5379 => "DemoteToHelperInvocationEXT".to_owned(),
            5380 => "DisplacementMicromapNV".to_owned(),
            5381 => "RayTracingOpacityMicromapEXT".to_owned(),
            5383 => "ShaderInvocationReorderNV".to_owned(),
            5390 => "BindlessTextureNV".to_owned(),
            5391 => "RayQueryPositionFetchKHR".to_owned(),
            5409 => "RayTracingDisplacementMicromapNV".to_owned(),
            5568 => "SubgroupShuffleINTEL".to_owned(),
            5569 => "SubgroupBufferBlockIOINTEL".to_owned(),
            5570 => "SubgroupImageBlockIOINTEL".to_owned(),
            5579 => "SubgroupImageMediaBlockIOINTEL".to_owned(),
            5582 => "RoundToInfinityINTEL".to_owned(),
            5583 => "FloatingPointModeINTEL".to_owned(),
            5584 => "IntegerFunctions2INTEL".to_owned(),
            5603 => "FunctionPointersINTEL".to_owned(),
            5604 => "IndirectReferencesINTEL".to_owned(),
            5606 => "AsmINTEL".to_owned(),
            5612 => "AtomicFloat32MinMaxEXT".to_owned(),
            5613 => "AtomicFloat64MinMaxEXT".to_owned(),
            5616 => "AtomicFloat16MinMaxEXT".to_owned(),
            5617 => "VectorComputeINTEL".to_owned(),
            5619 => "VectorAnyINTEL".to_owned(),
            5629 => "ExpectAssumeKHR".to_owned(),
            5696 => "SubgroupAvcMotionEstimationINTEL".to_owned(),
            5697 => "SubgroupAvcMotionEstimationIntraINTEL".to_owned(),
            5698 => "SubgroupAvcMotionEstimationChromaINTEL".to_owned(),
            5817 => "VariableLengthArrayINTEL".to_owned(),
            5821 => "FunctionFloatControlINTEL".to_owned(),
            5824 => "FPGAMemoryAttributesINTEL".to_owned(),
            5837 => "FPFastMathModeINTEL".to_owned(),
            5844 => "ArbitraryPrecisionIntegersINTEL".to_owned(),
            5845 => "ArbitraryPrecisionFloatingPointINTEL".to_owned(),
            5886 => "UnstructuredLoopControlsINTEL".to_owned(),
            5888 => "FPGALoopControlsINTEL".to_owned(),
            5892 => "KernelAttributesINTEL".to_owned(),
            5897 => "FPGAKernelAttributesINTEL".to_owned(),
            5898 => "FPGAMemoryAccessesINTEL".to_owned(),
            5904 => "FPGAClusterAttributesINTEL".to_owned(),
            5906 => "LoopFuseINTEL".to_owned(),
            5908 => "FPGADSPControlINTEL".to_owned(),
            5910 => "MemoryAccessAliasingINTEL".to_owned(),
            5916 => "FPGAInvocationPipeliningAttributesINTEL".to_owned(),
            5920 => "FPGABufferLocationINTEL".to_owned(),
            5922 => "ArbitraryPrecisionFixedPointINTEL".to_owned(),
            5935 => "USMStorageClassesINTEL".to_owned(),
            5939 => "RuntimeAlignedAttributeINTEL".to_owned(),
            5943 => "IOPipesINTEL".to_owned(),
            5945 => "BlockingPipesINTEL".to_owned(),
            5948 => "FPGARegINTEL".to_owned(),
            6016 => "DotProductInputAll".to_owned(),
            6016 => "DotProductInputAllKHR".to_owned(),
            6017 => "DotProductInput4x8Bit".to_owned(),
            6017 => "DotProductInput4x8BitKHR".to_owned(),
            6018 => "DotProductInput4x8BitPacked".to_owned(),
            6018 => "DotProductInput4x8BitPackedKHR".to_owned(),
            6019 => "DotProduct".to_owned(),
            6019 => "DotProductKHR".to_owned(),
            6020 => "RayCullMaskKHR".to_owned(),
            6022 => "CooperativeMatrixKHR".to_owned(),
            6025 => "BitInstructions".to_owned(),
            6026 => "GroupNonUniformRotateKHR".to_owned(),
            6033 => "AtomicFloat32AddEXT".to_owned(),
            6034 => "AtomicFloat64AddEXT".to_owned(),
            6089 => "LongCompositesINTEL".to_owned(),
            6094 => "OptNoneINTEL".to_owned(),
            6095 => "AtomicFloat16AddEXT".to_owned(),
            6114 => "DebugInfoModuleINTEL".to_owned(),
            6115 => "BFloat16ConversionINTEL".to_owned(),
            6141 => "SplitBarrierINTEL".to_owned(),
            6150 => "FPGAClusterAttributesV2INTEL".to_owned(),
            6161 => "FPGAKernelAttributesv2INTEL".to_owned(),
            6169 => "FPMaxErrorINTEL".to_owned(),
            6171 => "FPGALatencyControlINTEL".to_owned(),
            6174 => "FPGAArgumentInterfacesINTEL".to_owned(),
            6187 => "GlobalVariableHostAccessINTEL".to_owned(),
            6189 => "GlobalVariableFPGADecorationsINTEL".to_owned(),
            6400 => "GroupUniformArithmeticKHR".to_owned(),
            6441 => "CacheControlsINTEL".to_owned(),
            _ => value.to_string(),
        },
        "RayQueryIntersection" => match value {
            0 => "RayQueryCandidateIntersectionKHR".to_owned(),
            1 => "RayQueryCommittedIntersectionKHR".to_owned(),
            _ => value.to_string(),
        },
        "RayQueryCommittedIntersectionType" => match value {
            0 => "RayQueryCommittedIntersectionNoneKHR".to_owned(),
            1 => "RayQueryCommittedIntersectionTriangleKHR".to_owned(),
            2 => "RayQueryCommittedIntersectionGeneratedKHR".to_owned(),
            _ => value.to_string(),
        },
        "RayQueryCandidateIntersectionType" => match value {
            0 => "RayQueryCandidateIntersectionTriangleKHR".to_owned(),
            1 => "RayQueryCandidateIntersectionAABBKHR".to_owned(),
            _ => value.to_string(),
        },
        "PackedVectorFormat" => match value {
            0 => "PackedVectorFormat4x8Bit".to_owned(),
            0 => "PackedVectorFormat4x8BitKHR".to_owned(),
            _ => value.to_string(),
        },
        "CooperativeMatrixLayout" => match value {
            0 => "RowMajorKHR".to_owned(),
            1 => "ColumnMajorKHR".to_owned(),
            _ => value.to_string(),
        },
        "CooperativeMatrixUse" => match value {
            0 => "MatrixAKHR".to_owned(),
            1 => "MatrixBKHR".to_owned(),
            2 => "MatrixAccumulatorKHR".to_owned(),
            _ => value.to_string(),
        },
        "InitializationModeQualifier" => match value {
            0 => "InitOnDeviceReprogramINTEL".to_owned(),
            1 => "InitOnDeviceResetINTEL".to_owned(),
            _ => value.to_string(),
        },
        "LoadCacheControl" => match value {
            0 => "UncachedINTEL".to_owned(),
            1 => "CachedINTEL".to_owned(),
            2 => "StreamingINTEL".to_owned(),
            3 => "InvalidateAfterReadINTEL".to_owned(),
            4 => "ConstCachedINTEL".to_owned(),
            _ => value.to_string(),
        },
        "StoreCacheControl" => match value {
            0 => "UncachedINTEL".to_owned(),
            1 => "WriteThroughINTEL".to_owned(),
            2 => "WriteBackINTEL".to_owned(),
            3 => "StreamingINTEL".to_owned(),
            _ => value.to_string(),
        },
        "ImageOperands" => match value {
            0 => "None".to_owned(),
            _ => value.to_string(),
        },
        "FPFastMathMode" => match value {
            0 => "None".to_owned(),
            _ => value.to_string(),
        },
        "SelectionControl" => match value {
            0 => "None".to_owned(),
            _ => value.to_string(),
        },
        "LoopControl" => match value {
            0 => "None".to_owned(),
            _ => value.to_string(),
        },
        "FunctionControl" => match value {
            0 => "None".to_owned(),
            _ => value.to_string(),
        },
        "MemorySemantics" => match value {
            0 => "None".to_owned(),
            _ => value.to_string(),
        },
        "MemoryAccess" => match value {
            0 => "None".to_owned(),
            _ => value.to_string(),
        },
        "KernelProfilingInfo" => match value {
            0 => "None".to_owned(),
            _ => value.to_string(),
        },
        "RayFlags" => match value {
            0 => "None".to_owned(),
            _ => value.to_string(),
        },
        "FragmentShadingRate" => match value {
            0 => "None".to_owned(),
            _ => value.to_string(),
        },
        "CooperativeMatrixOperands" => match value {
            0 => "None".to_owned(),
            _ => value.to_string(),
        },
        _ => bail!("unknown enum: {}", ety),
    };
    Ok(out)
}
